//import com.hearthappy.LayoutWatchPlugin

plugins {
//    alias(libs.plugins.android.application)
//    alias(libs.plugins.kotlin.android)
//    alias(libs.plugins.devtools.ksp)
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}
//apply plugin: LayoutWatchPlugin
// 可选：绑定到 assemble 任务（构建时自动启动监听）
tasks.named('assemble') {
    dependsOn 'watchLayout'
}
android {
    namespace 'com.hearthappy.viewmodelautomationx'
    compileSdk  rootProject.ext.compileSdk

    defaultConfig {
        minSdk rootProject.ext.minSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.kotlinJvmTarget
    }

    buildFeatures {
        viewBinding true
    }


}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.activity
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit


    implementation libs.androidx.activity.ktx
    implementation libs.androidx.fragment.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.squareup.converter.gson
    implementation libs.squareup.adapter.rxjava2
    implementation libs.squareup.okhttp3
    implementation libs.getactivity.toastutils

    implementation libs.datastore.preferences
    implementation libs.datastore.preferences.core
//    implementation libs.kotlin.reflect
    //远程库
//    implementation libs.hearthappy.vma.annotations
//    implementation libs.hearthappy.vma.ktx
//    ksp libs.hearthappy.vma.processor

    implementation project(':vma-ktx')
//    implementation project(':annotations')
//    //注意：要求jdk11或更高才能将生成文件作为资源引用
    ksp project(":processor")
}